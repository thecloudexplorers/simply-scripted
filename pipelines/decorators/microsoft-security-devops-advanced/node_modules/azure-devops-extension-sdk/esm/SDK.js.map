{"version":3,"file":"SDK.js","sources":["../../src/SDK.ts"],"sourcesContent":["import { channelManager } from \"./XDM\";\r\n\r\n/**\r\n * Web SDK version number. Can be specified in an extension's set of demands like: vss-sdk-version/3.0\r\n */\r\nexport const sdkVersion = 4.0;\r\n\r\nconst global = window as any;\r\nif (global._AzureDevOpsSDKVersion) {\r\n    console.error(\"The AzureDevOps SDK is already loaded. Only one version of this module can be loaded in a given document.\");\r\n}\r\n\r\nglobal._AzureDevOpsSDKVersion = sdkVersion;\r\n\r\n/**\r\n * Options for extension initialization -- passed to DevOps.init()\r\n */\r\nexport interface IExtensionInitOptions {\r\n    /**\r\n     * True (the default) indicates that the content of this extension is ready to be shown/used as soon as the\r\n     * init handshake has completed. Otherwise (loaded: false), the extension must call DevOps.notifyLoadSucceeded()\r\n     * once it has finished loading.\r\n     */\r\n    loaded?: boolean;\r\n\r\n    /**\r\n     * Extensions that show UI should specify this to true in order for the current user's theme\r\n     * to be applied to this extension content. Defaults to true.\r\n     */\r\n    applyTheme?: boolean;\r\n}\r\n\r\n/**\r\n * Information about the current user\r\n */\r\nexport interface IUserContext {\r\n\r\n    /**\r\n     * Identity descriptor used to represent this user. In the format of {subject-type}.{base64-encoded-subject-id}\r\n     */\r\n    descriptor: string;\r\n\r\n    /**\r\n     * Unique id for the user\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * Name of the user (email/login)\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * The user's display name (First name / Last name)\r\n     */\r\n    displayName: string;\r\n\r\n    /**\r\n     * Url to the user's profile image\r\n     */\r\n    imageUrl: string;\r\n}\r\n\r\n/**\r\n * DevOps host level\r\n */\r\nexport enum HostType {\r\n    Unknown = 0,\r\n    /**\r\n     * The Deployment host\r\n     */\r\n    Deployment = 1,\r\n\r\n    /**\r\n     * The Enterprise host\r\n     */\r\n    Enterprise = 2,\r\n\r\n    /**\r\n     * The organization host\r\n     */\r\n    Organization = 4\r\n}\r\n\r\n/**\r\n * Information about the current DevOps host (organization)\r\n */\r\nexport interface IHostContext {\r\n    /**\r\n     * Unique GUID for this host\r\n     */\r\n    id: string;\r\n    /**\r\n     * Name of the host (i.e. Organization name)\r\n     */\r\n    name: string;\r\n    /**\r\n     * Version of Azure DevOps used by the current host (organization)\r\n     */\r\n    serviceVersion: string;\r\n    /**\r\n     * DevOps host level\r\n     */\r\n    type: HostType;\r\n    /**\r\n     * Distinguish between Azure DevOps Services (true) and Azure DevOps Server (false)\r\n     */\r\n    isHosted: boolean;\r\n}\r\n\r\n/**\r\n * Identifier for the current extension\r\n */\r\nexport interface IExtensionContext {\r\n    /**\r\n     * Full id of the extension <publisher>.<extension>\r\n     */\r\n    id: string;\r\n    /**\r\n     * Id of the publisher\r\n     */\r\n    publisherId: string;\r\n    /**\r\n     * Id of the extension (without the publisher prefix)\r\n     */\r\n    extensionId: string;\r\n    /**\r\n     * Version of the extension\r\n     */\r\n    version: string;\r\n}\r\n\r\n/**\r\n * Information about the current DevOps team\r\n */\r\nexport interface ITeamContext {\r\n    /**\r\n     * Unique GUID for this team\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * Name of team\r\n     */\r\n    name: string;\r\n}\r\n\r\nexport interface GlobalizationContext {\r\n    culture: string;\r\n    /**\r\n    * Gets the explicitly-set theme, or the empty string if a theme was not explicitly set. An explicitly-set theme is set either in the query string (?theme=[themename]) or in the user's profile. However, the default theme set in the profile is not considered to be an explicitly-set theme.\r\n    */\r\n    explicitTheme: string;\r\n    theme: string;\r\n    timeZoneId: string;\r\n    timezoneOffset: number;\r\n    typeAheadDisabled: boolean;\r\n}\r\n\r\ninterface DaylightSavingsAdjustmentEntry {\r\n    /**\r\n    * Millisecond adjustment from UTC\r\n    */\r\n    offset: number;\r\n    /**\r\n    * Date that the offset adjustment starts\r\n    */\r\n    start: Date;\r\n}\r\n\r\ninterface TimeZonesConfiguration {\r\n    daylightSavingsAdjustments: DaylightSavingsAdjustmentEntry[];\r\n}\r\n\r\n/**\r\n* Global context placed on each web page\r\n*/\r\nexport interface IPageContext {\r\n    /**\r\n    * Globalization data for the current page based on the current user's settings\r\n    */\r\n    globalization: GlobalizationContext;\r\n    /**\r\n    * Contains global time zone configuration information (e.g. which dates DST changes)\r\n    */\r\n    timeZonesConfiguration: TimeZonesConfiguration;\r\n    /**\r\n    * The web context information for the given page request\r\n    */\r\n    webContext: IWebContext;\r\n}\r\n\r\nexport interface ContextIdentifier {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n* Context information for all web access requests\r\n*/\r\ninterface IWebContext {\r\n    /**\r\n    * Information about the project used in the current request (may be null)\r\n    */\r\n    project: ContextIdentifier;\r\n    /**\r\n    * Information about the team used in the current request (may be null)\r\n    */\r\n    team: ITeamContext;\r\n}\r\n\r\ninterface IExtensionHandshakeOptions extends IExtensionInitOptions {\r\n    /**\r\n     * Version number of this SDK\r\n     */\r\n    sdkVersion: number;\r\n}\r\n\r\ninterface IExtensionHandshakeResult {\r\n    contributionId: string;\r\n    context: {\r\n        extension: IExtensionContext,\r\n        pageContext: IPageContext,\r\n        user: IUserContext,\r\n        host: IHostContext\r\n    },\r\n    initialConfig?: { [key: string]: any };\r\n    themeData?: { [key: string]: string };\r\n}\r\n\r\nconst hostControlId = \"DevOps.HostControl\";\r\nconst serviceManagerId = \"DevOps.ServiceManager\";\r\nconst parentChannel = channelManager.addChannel(window.parent);\r\n\r\nlet teamContext: ITeamContext | undefined;\r\nlet webContext: IWebContext | undefined;;\r\nlet hostPageContext: IPageContext | undefined;\r\nlet extensionContext: IExtensionContext | undefined;\r\nlet initialConfiguration: { [key: string]: any } | undefined;\r\nlet initialContributionId: string | undefined;\r\nlet userContext: IUserContext | undefined;\r\nlet hostContext: IHostContext | undefined;\r\nlet themeElement: HTMLStyleElement;\r\n\r\nlet resolveReady: () => void;\r\nconst readyPromise = new Promise<void>((resolve) => {\r\n    resolveReady = resolve;\r\n});\r\n\r\n/**\r\n * Register a method so that the host frame can invoke events\r\n */\r\nfunction dispatchEvent(eventName: string, params: any) {\r\n    const global = window as any;\r\n\r\n    let evt;\r\n    if (typeof global.CustomEvent === \"function\") {\r\n        evt = new global.CustomEvent(eventName, params);\r\n    }\r\n    else {\r\n        params = params || { bubbles: false, cancelable: false };\r\n        evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\r\n    }\r\n\r\n    window.dispatchEvent(evt);\r\n}\r\nparentChannel.getObjectRegistry().register(\"DevOps.SdkClient\", {\r\n    dispatchEvent: dispatchEvent\r\n});\r\n\r\n/**\r\n * Initiates the handshake with the host window.\r\n *\r\n * @param options - Initialization options for the extension.\r\n */\r\nexport function init(options?: IExtensionInitOptions): Promise<void> {\r\n\r\n    return new Promise((resolve) => {\r\n\r\n        const initOptions = { ...options, sdkVersion };\r\n\r\n        parentChannel.invokeRemoteMethod<IExtensionHandshakeResult>(\"initialHandshake\", hostControlId, [initOptions]).then((handshakeData) => {\r\n            const context = handshakeData.context;\r\n            hostPageContext = context.pageContext;\r\n            webContext = hostPageContext ? hostPageContext.webContext : undefined;\r\n            teamContext = webContext ? webContext.team : undefined;\r\n\r\n            initialConfiguration = handshakeData.initialConfig || {};\r\n            initialContributionId = handshakeData.contributionId;\r\n\r\n            extensionContext = context.extension;\r\n            userContext = context.user;\r\n            hostContext = context.host;\r\n\r\n            if (handshakeData.themeData) {\r\n                applyTheme(handshakeData.themeData);\r\n\r\n                window.addEventListener(\"themeChanged\", (ev: any) => {\r\n                    applyTheme(ev.detail.data);\r\n                });\r\n            }\r\n\r\n            resolveReady();\r\n            resolve();\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n* Register a callback that gets called once the initial setup/handshake has completed.\r\n* If the initial setup is already completed, the callback is invoked at the end of the current call stack.\r\n*/\r\nexport async function ready(): Promise<void> {\r\n    return readyPromise;\r\n}\r\n\r\n/**\r\n* Notifies the host that the extension successfully loaded (stop showing the loading indicator)\r\n*/\r\nexport function notifyLoadSucceeded(): Promise<void> {\r\n    return parentChannel.invokeRemoteMethod(\"notifyLoadSucceeded\", hostControlId);\r\n}\r\n\r\n/**\r\n* Notifies the host that the extension failed to load\r\n*/\r\nexport function notifyLoadFailed(e: Error | string): Promise<void> {\r\n    return parentChannel.invokeRemoteMethod(\"notifyLoadFailed\", hostControlId, [e]);\r\n}\r\n\r\nfunction getWaitForReadyError(method: string): string {\r\n    return `Attempted to call ${method}() before init() was complete. Wait for init to complete or place within a ready() callback.`;\r\n}\r\n\r\n/**\r\n* Get the configuration data passed in the initial handshake from the parent frame\r\n*/\r\nexport function getConfiguration(): { [key: string]: any } {\r\n    if (!initialConfiguration) {\r\n        throw new Error(getWaitForReadyError(\"getConfiguration\"));\r\n    }\r\n    return initialConfiguration;\r\n}\r\n\r\n/**\r\n* Gets the information about the contribution that first caused this extension to load.\r\n*/\r\nexport function getContributionId(): string {\r\n    if (!initialContributionId) {\r\n        throw new Error(getWaitForReadyError(\"getContributionId\"));\r\n    }\r\n    return initialContributionId;\r\n}\r\n\r\n/**\r\n* Gets information about the current user\r\n*/\r\nexport function getUser(): IUserContext {\r\n    if (!userContext) {\r\n        throw new Error(getWaitForReadyError(\"getUser\"));\r\n    }\r\n    return userContext;\r\n}\r\n\r\n/**\r\n* Gets information about the host (i.e. an Azure DevOps organization) that the page is targeting\r\n*/\r\nexport function getHost(): IHostContext {\r\n    if (!hostContext) {\r\n        throw new Error(getWaitForReadyError(\"getHost\"));\r\n    }\r\n    return hostContext;\r\n}\r\n\r\n/**\r\n* Get the context about the extension that owns the content that is being hosted\r\n*/\r\nexport function getExtensionContext(): IExtensionContext {\r\n    if (!extensionContext) {\r\n        throw new Error(getWaitForReadyError(\"getExtensionContext\"));\r\n    }\r\n    return extensionContext;\r\n}\r\n\r\n/**\r\n* Gets information about the team that the page is targeting\r\n*/\r\nexport function getTeamContext(): ITeamContext {\r\n    if (!teamContext) {\r\n        throw new Error(getWaitForReadyError(\"getTeamContext\"));\r\n    }\r\n    return teamContext;\r\n}\r\n\r\n/**\r\n* Get the context about the host page\r\n*/\r\nexport function getPageContext(): IPageContext {\r\n    if (!hostPageContext) {\r\n        throw new Error(getWaitForReadyError(\"getPageContext\"));\r\n    }\r\n    return hostPageContext;\r\n}\r\n\r\n/**\r\n* Get the context about the web\r\n*/\r\nexport function getWebContext(): IWebContext {\r\n    if (!webContext) {\r\n        throw new Error(getWaitForReadyError(\"getWebContext\"));\r\n    }\r\n    return webContext;\r\n}\r\n\r\n/**\r\n* Get the contribution with the given contribution id. The returned contribution has a method to get a registered object within that contribution.\r\n*\r\n* @param contributionId - Id of the contribution to get\r\n*/\r\nexport async function getService<T>(contributionId: string): Promise<T> {\r\n    return ready().then(() => {\r\n        return parentChannel.invokeRemoteMethod<T>(\"getService\", serviceManagerId, [contributionId]);\r\n    });\r\n}\r\n\r\n/**\r\n* Register an object (instance or factory method) that this extension exposes to the host frame.\r\n*\r\n* @param instanceId - unique id of the registered object\r\n* @param instance - Either: (1) an object instance, or (2) a function that takes optional context data and returns an object instance.\r\n*/\r\nexport function register<T extends Object>(instanceId: string, instance: T): void {\r\n    parentChannel.getObjectRegistry().register(instanceId, instance);\r\n}\r\n\r\n/**\r\n* Removes an object that this extension exposed to the host frame.\r\n*\r\n* @param instanceId - unique id of the registered object\r\n*/\r\nexport function unregister(instanceId: string): void {\r\n    parentChannel.getObjectRegistry().unregister(instanceId);\r\n}\r\n\r\n/**\r\n* Fetch an access token which will allow calls to be made to other DevOps services\r\n*/\r\nexport async function getAccessToken(): Promise<string> {\r\n    return parentChannel.invokeRemoteMethod<{ token: string }>(\"getAccessToken\", hostControlId).then((tokenObj) => { return tokenObj.token; });\r\n}\r\n\r\n/**\r\n* Fetch an token which can be used to identify the current user\r\n*/\r\nexport async function getAppToken(): Promise<string> {\r\n    return parentChannel.invokeRemoteMethod<{ token: string }>(\"getAppToken\", hostControlId).then((tokenObj) => { return tokenObj.token; });\r\n}\r\n\r\n/**\r\n* Requests the parent window to resize the container for this extension based on the current extension size.\r\n*\r\n* @param width - Optional width, defaults to scrollWidth\r\n* @param height - Optional height, defaults to scrollHeight\r\n*/\r\nexport function resize(width?: number, height?: number): void {\r\n    const body = document.body;\r\n    if (body) {\r\n        const newWidth = typeof width === \"number\" ? width : (body ? body.scrollWidth : undefined);\r\n        const newHeight = typeof height === \"number\" ? height : (body ? body.scrollHeight : undefined);\r\n        parentChannel.invokeRemoteMethod(\"resize\", hostControlId, [newWidth, newHeight]);\r\n    }\r\n}\r\n\r\n/**\r\n * Applies theme variables to the current document\r\n */\r\nexport function applyTheme(themeData: { [varName: string]: string }): void {\r\n\r\n    if (!themeElement) {\r\n        themeElement = document.createElement(\"style\");\r\n        themeElement.type = \"text/css\";\r\n        document.head!.appendChild(themeElement);\r\n    }\r\n\r\n    const cssVariables: string[] = [];\r\n    if (themeData) {\r\n        for (const varName in themeData) {\r\n            cssVariables.push(\"--\" + varName + \": \" + themeData[varName]);\r\n        }\r\n    }\r\n\r\n    themeElement.innerText = \":root { \" + cssVariables.join(\"; \") + \" } body { color: var(--text-primary-color) }\";\r\n\r\n    dispatchEvent(\"themeApplied\", { detail: themeData });\r\n}"],"names":[],"mappings":"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"}